services:
    db:
        image: postgres:16
        restart: on-failure
        ports:
            - 5432:5432
        environment:
            - POSTGRES_PASSWORD=1234
            - POSTGRES_USER=main
            - POSTGRES_DB=application
        volumes:
            - data:/var/lib/postgresql/data
        networks:
            - app
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U main -d application"]
            interval: 5s
            timeout: 5s
    api:
        build: 
            context: .
            dockerfile: Dockerfile.backend
        ports:
            - "8080:8080"
        depends_on:
          db:
            condition: service_healthy
        networks:
            - app
        container_name: api-ride
        command: sh -c "npm run migration & npm run seeder &  npm run start "
    web:
        build: 
            context: .
            dockerfile: Dockerfile.frontend
        depends_on:
            - api
        networks:
            - app
        container_name: web-ride
        volumes:
            - spa-volume:/var/www/html
    nginx:
        container_name: nginx-ride
        build: 
            context: ./ngix
        ports:
            - 80:80
        depends_on:
            - api
            - db
            - web
        volumes:
            - spa-volume:/var/www/html

networks:
    app:
        driver: bridge

volumes:
    data:
    spa-volume: